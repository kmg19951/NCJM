#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 4.22
#  in conjunction with Tcl version 8.6
#    May 07, 2019 06:57:17 PM CEST  platform: Linux

import sys, subprocess, os

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True


def set_Tk_var():
    global che64
    che64 = tk.StringVar()
    global che65
    che65 = tk.StringVar()
    global che69
    che69 = tk.StringVar()
    global che67
    che67 = tk.StringVar()

def help():
    os.system('gedit ' + os.getcwd() + '/files/crunch/crunch.help')
    sys.stdout.flush()

def exit():
    destroy_window()
    sys.stdout.flush()

def buttonperson():
    global w
    obj = w.Scrolledtext1
    obj2 = w.Entry2
    obj.delete(1.0, tk.END)
    #proc = subprocess.Popen("cat /home/alumne/Escriptori/nmap.txt", stdout=subprocess.PIPE, shell=True)
    proc = subprocess.Popen(obj2.get(), stdout=subprocess.PIPE, shell=True)
    (out, err) = proc.communicate()
    obj.insert(tk.END, '\n ------------------------------------------\n \tResult \n ------------------------------------------\n\n' + out)
    sys.stdout.flush()

def destinFile():
    if che64.get() == "1":
        w.Entry1_8.configure(state="normal")
    else:
        w.Entry1_8.configure(state="disabled")
    sys.stdout.flush()

def mixedChar():
    w.Button1.configure(state='normal')
    if che67.get() == "1":
        #67-Checkbutton1_14
        w.Entry1_3.configure(state="normal")
        w.Entry1_6.configure(state="disabled")
        w.Checkbutton1_14.configure(state="disabled")
        w.Entry1_4.configure(state="disabled")
        w.Checkbutton1_10.configure(state="disabled")
    else:
        w.Entry1_3.configure(state="disabled")
        w.Checkbutton1_14.configure(state="normal")
        w.Entry1_4.configure(state="disabled")
        w.Checkbutton1_10.configure(state="normal")
    sys.stdout.flush()

def mixedWord():
    w.Button1.configure(state='normal')
    if che69.get() == "1":
        w.Entry1_4.configure(state="normal")
        w.Checkbutton1_12.configure(state="disabled")
        #65
        w.Checkbutton1_10.configure(state="disabled")
        w.Entry1_6.configure(state="disabled")
        w.Entry1_3.configure(state="disabled")
    else:
        w.Entry1_4.configure(state="disabled")
        #67
        w.Checkbutton1_12.configure(state="normal")
        w.Checkbutton1_10.configure(state="normal")
        w.Entry1_6.configure(state="disabled")
        w.Entry1_3.configure(state="disabled")
    sys.stdout.flush()

def restricChar():
    w.Button1.configure(state='normal')
    if che65.get() == "1":
        w.Entry1_6.configure(state="normal")
        w.Checkbutton1_14.configure(state="disabled")
        w.Entry1_4.configure(state="disabled")
        w.Checkbutton1_12.configure(state="disabled")
    else:
        w.Entry1_6.configure(state="disabled")
        w.Checkbutton1_14.configure(state="normal")
        w.Entry1_4.configure(state="disabled")
        w.Checkbutton1_12.configure(state="normal")
    sys.stdout.flush()

def string():
    string = ""
    if che67.get() == "1":
        string+=" " + w.Entry1_3.get()
    if che69.get() == "1":
        string+= " -p " + w.Entry1_4.get()
    if che65.get() == "1":
        string+= " -t " + w.Entry1_6.get()
    if che64.get() == "1":
        string+=" -o " + os.getcwd() + "/files/crunch/" + w.Entry1_8.get()
        global active, ruta
        ruta =  os.getcwd() + "/files/crunch/" + w.Entry1_8.get()
        active = 1
    else:
        active = 0
    return string

def rutaDeVuelta():
    global ruta, varRutaDeVuelta
    if(varRutaDeVuelta == 1):
        return ruta

def generate():
    global w,string,active,varRutaDeVuelta
    print(w.Entry1_4.get())
    varRutaDeVuelta = 1
    obj = w.Scrolledtext1
    obj.delete(1.0, tk.END)
    obj2 = w.Entry1
    obj3 = w.Entry1_2
    strung = string()
    print("crunch " + obj2.get() + " " + obj3.get() + " " + strung)
    proc = subprocess.Popen("crunch " + obj2.get() + " " + obj3.get() + " " + strung, stdout=subprocess.PIPE, shell=True)
    (out, err) = proc.communicate()
    #obj.delete(1.0, tk.END)
    if active == 1:
        proc = subprocess.Popen("cat " + os.getcwd() + "/files/crunch/" + w.Entry1_8.get() , stdout=subprocess.PIPE, shell=True)
        (out2, err) = proc.communicate()
        obj.delete(1.0, tk.END)
        obj.insert(tk.END, '\n ------------------------------------------\n \tResult \n ------------------------------------------\n\n' + out2)
    else:
        obj.insert(tk.END, '\n ------------------------------------------\n \tResult \n ------------------------------------------\n\n' + out)
    archivo = open(os.getcwd() + '/files/crunch/ruta','w')
    archivo.write(os.getcwd() + "/files/crunch/" + w.Entry1_8.get())
    sys.stdout.flush()

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top
    global active, varRutaDeVuelta, ruta
    active = None
    varRutaDeVuelta = None
    ruta = None


def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import crunch_interface
    crunch_interface.vp_start_gui()
