#############################################################################
# Generated by PAGE version 4.22
#  in conjunction with Tcl version 8.6
#  May 14, 2019 07:06:22 PM CEST  platform: Linux
set vTcl(timestamp) ""


if {!$vTcl(borrow)} {

set desc "-family {DejaVu Sans} -size 10"
set vTcl(actual_gui_font_text_desc) $desc
set vTcl(actual_gui_font_text_name) [font create {*}$desc]
set desc "-family {DejaVu Sans Mono} -size 10"
set vTcl(actual_gui_font_fixed_desc) $desc
set vTcl(actual_gui_font_fixed_name) [font create {*}$desc]
set desc "-family {DejaVu Sans} -size 10"
set vTcl(actual_gui_font_menu_desc) $desc
set vTcl(actual_gui_font_menu_name) [font create {*}$desc]
set desc "-family {DejaVu Sans} -size 10"
set vTcl(actual_gui_font_tooltip_desc) $desc
set vTcl(actual_gui_font_tooltip_name) [font create {*}$desc]
set vTcl(actual_gui_bg) #d9d9d9
set vTcl(actual_gui_fg) #000000
set vTcl(actual_gui_analog) #ececec
set vTcl(actual_gui_menu_analog) #ececec
set vTcl(actual_gui_menu_bg) #d9d9d9
set vTcl(actual_gui_menu_fg) #000000
set vTcl(complement_color) #d9d9d9
set vTcl(analog_color_p) #d9d9d9
set vTcl(analog_color_m) #ececec
set vTcl(active_fg) #000000
set vTcl(actual_gui_menu_active_bg)  #ececec
set vTcl(active_menu_fg) #000000
}

# vTcl Code to Load User Fonts

vTcl:font:add_font \
    "-family {DejaVu Sans} -size 8 -weight normal -slant roman -underline 0 -overstrike 0" \
    user \
    vTcl:font11
vTcl:font:add_font \
    "-family {DejaVu Sans} -size 14 -weight normal -slant roman -underline 0 -overstrike 0" \
    user \
    vTcl:font12
#################################
#LIBRARY PROCEDURES
#


if {[info exists vTcl(sourcing)]} {

proc vTcl:project:info {} {
    set base .top42
    global vTcl
    set base $vTcl(btop)
    if {$base == ""} {
        set base .top42
    }
    namespace eval ::widgets::$base {
        set dflt,origin 0
        set runvisible 1
    }
    namespace eval ::widgets_bindings {
        set tagslist _TopLevel
    }
    namespace eval ::vTcl::modules::main {
        set procs {
        }
        set compounds {
        }
        set projectType single
    }
}
}

#################################
# GENERATED GUI PROCEDURES
#

proc vTclWindow.top42 {base} {
    if {$base == ""} {
        set base .top42
    }
    if {[winfo exists $base]} {
        wm deiconify $base; return
    }
    set top $base
    ###################
    # CREATING WIDGETS
    ###################
    vTcl::widgets::core::toplevel::createCmd $top -class Toplevel \
        -menu "$top.m46" -background {#d9d9d9} 
    wm focusmodel $top passive
    wm geometry $top 445x450+746+263
    update
    # set in toplevel.wgt.
    global vTcl
    global img_list
    set vTcl(save,dflt,origin) 0
    wm maxsize $top 1905 1050
    wm minsize $top 1 1
    wm overrideredirect $top 0
    wm resizable $top 1 1
    wm deiconify $top
    wm title $top "Attack from Services"
    vTcl:DefineAlias "$top" "Toplevel1" vTcl:Toplevel:WidgetProc "" 1
    vTcl::widgets::ttk::scrolledtext::CreateCmd $top.scr43 \
        -background {#d9d9d9} -height 147 -highlightcolor black -width 258 
    vTcl:DefineAlias "$top.scr43" "Scrolledtext1" vTcl:WidgetProc "Toplevel1" 1

    $top.scr43.01 configure -background white \
        -font font9 \
        -foreground black \
        -height 3 \
        -highlightcolor black \
        -insertbackground black \
        -insertborderwidth 3 \
        -selectbackground #c4c4c4 \
        -selectforeground black \
        -width 10 \
        -wrap none
    label $top.lab44 \
        -background {#d9d9d9} -font TkDefaultFont -foreground {#000000} \
        -text {Ip's and services selected:} 
    vTcl:DefineAlias "$top.lab44" "Label1" vTcl:WidgetProc "Toplevel1" 1
    label $top.lab45 \
        -background {#d9d9d9} -font TkDefaultFont -foreground {#000000} 
    vTcl:DefineAlias "$top.lab45" "Label2" vTcl:WidgetProc "Toplevel1" 1
    set site_3_0 $top.m46
    menu $site_3_0 \
        -activebackground {#ececec} -activeforeground {#000000} \
        -background {#d9d9d9} -font {-family {DejaVu Sans} -size 10} \
        -foreground {#000000} -tearoff 0 
    label $top.lab47 \
        -background {#d9d9d9} -font TkDefaultFont -foreground {#000000} \
        -text {Service Finder: } 
    vTcl:DefineAlias "$top.lab47" "Label3" vTcl:WidgetProc "Toplevel1" 1
    entry $top.ent49 \
        -background white -font {-family {DejaVu Sans Mono} -size 10} \
        -foreground {#000000} -insertbackground black -state readonly 
    vTcl:DefineAlias "$top.ent49" "Entry1" vTcl:WidgetProc "Toplevel1" 1
    label $top.lab50 \
        -background {#d9d9d9} -font TkDefaultFont -foreground {#000000} \
        -text {File Users Path:} 
    vTcl:DefineAlias "$top.lab50" "Label4" vTcl:WidgetProc "Toplevel1" 1
    label $top.lab51 \
        -background {#d9d9d9} -font TkDefaultFont -foreground {#000000} \
        -text /home/alumne/Escriptori/TF/files/medusa/medusa_users.l2p 
    vTcl:DefineAlias "$top.lab51" "Label5" vTcl:WidgetProc "Toplevel1" 1
    button $top.but52 \
        -background {#d9d9d9} -command attack -font TkDefaultFont \
        -foreground {#000000} -highlightcolor black -text Â¡ATTACK! 
    vTcl:DefineAlias "$top.but52" "Button1" vTcl:WidgetProc "Toplevel1" 1
    label $top.lab53 \
        -background {#d9d9d9} -font {-family {DejaVu Sans} -size 8} \
        -foreground {#000000} -text {Created by: Ivan & Kevin} 
    vTcl:DefineAlias "$top.lab53" "Label6" vTcl:WidgetProc "Toplevel1" 1
    label $top.lab54 \
        -background {#d9d9d9} -font {-family {DejaVu Sans} -size 14} \
        -foreground {#000000} -text {Output on Terminal} 
    vTcl:DefineAlias "$top.lab54" "Label7" vTcl:WidgetProc "Toplevel1" 1
    ###################
    # SETTING GEOMETRY
    ###################
    place $top.scr43 \
        -in $top -x 80 -y 100 -width 258 -relwidth 0 -height 147 -relheight 0 \
        -anchor nw -bordermode ignore 
    place $top.lab44 \
        -in $top -x 80 -y 70 -anchor nw -bordermode ignore 
    place $top.lab45 \
        -in $top -x 350 -y 90 -anchor nw -bordermode ignore 
    place $top.lab47 \
        -in $top -x 80 -y 10 -anchor nw -bordermode ignore 
    place $top.ent49 \
        -in $top -x 80 -y 30 -width 146 -relwidth 0 -height 23 -relheight 0 \
        -anchor nw -bordermode ignore 
    place $top.lab50 \
        -in $top -x 80 -y 260 -anchor nw -bordermode ignore 
    place $top.lab51 \
        -in $top -x 30 -y 290 -anchor nw -bordermode ignore 
    place $top.but52 \
        -in $top -x 170 -y 330 -anchor nw -bordermode ignore 
    place $top.lab53 \
        -in $top -x 150 -y 430 -anchor nw -bordermode ignore 
    place $top.lab54 \
        -in $top -x 120 -y 380 -anchor nw -bordermode ignore 

    vTcl:FireEvent $base <<Ready>>
}

set btop ""
if {$vTcl(borrow)} {
    set btop .bor[expr int([expr rand() * 100])]
    while {[lsearch $btop $vTcl(tops)] != -1} {
        set btop .bor[expr int([expr rand() * 100])]
    }
}
set vTcl(btop) $btop
Window show .
Window show .top42 $btop
if {$vTcl(borrow)} {
    $btop configure -background plum
}

